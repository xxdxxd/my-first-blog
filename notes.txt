dowload git from git-scm.com and install it
apply account in github.com
apply free account in pythonanywhere.com

install python3.4 64bit version on windows

C:\xxd\learn\djangogirls>python --version
Python 3.4.3

C:\xxd\learn\djangogirls>python -m venv myvenv
C:\xxd\learn\djangogirls>dir
 Volume in drive C has no label.
 Volume Serial Number is B0B2-5AD6

 Directory of C:\xxd\learn\djangogirls

11/11/2015  08:42 AM    <DIR>          .
11/11/2015  08:42 AM    <DIR>          ..
11/11/2015  08:42 AM    <DIR>          myvenv
               0 File(s)              0 bytes
               3 Dir(s)  334,084,546,560 bytes free

C:\xxd\learn\djangogirls>myvenv\scripts\activate
(myvenv) C:\xxd\learn\djangogirls>pip install django==1.8

(myvenv) C:\xxd\learn\djangogirls>django-admin startproject mysite .

(myvenv) C:\xxd\learn\djangogirls>dir
 Volume in drive C has no label.
 Volume Serial Number is B0B2-5AD6

 Directory of C:\xxd\learn\djangogirls

11/11/2015  09:08 AM    <DIR>          .
11/11/2015  09:08 AM    <DIR>          ..
11/11/2015  09:08 AM               249 manage.py
11/11/2015  09:08 AM    <DIR>          mysite
11/11/2015  08:45 AM    <DIR>          myvenv
11/11/2015  09:06 AM               770 notes.txt

change mysite/settings.py
add:
STATIC_ROOT=os.path.join(BASE_DIR,'static')
TIME_ZONE='EST'

setup database
(myvenv) C:\xxd\learn\djangogirls>python manage.py migrate

run server
(myvenv) C:\xxd\learn\djangogirls>python manage.py runserver

C:\Python34\;C:\Python34\Scripts;C:\senchacmd\Sencha\Cmd\3.1.1.274;C:\dl\ruby193\bin;
C:\Program Files\Broadcom\Broadcom 802.11\Driver;;C:\Program Files (x86)\AMD APP\bin\x86_64;
C:\Program Files (x86)\AMD APP\bin\x86;C:\Program Files\Common Files\Microsoft Shared\Windows Live;
C:\Program Files (x86)\Common Files\Microsoft Shared\Windows Live;%SystemRoot%\system32;%SystemRoot%;
%SystemRoot%\System32\Wbem;%SYSTEMROOT%\System32\WindowsPowerShell\v1.0\;
C:\Program Files (x86)\Common Files\Roxio Shared\DLLShared\;
C:\Program Files (x86)\Common Files\Roxio Shared\DLLShared\;
C:\Program Files (x86)\Common Files\Roxio Shared\12.0\DLLShared\;
C:\Program Files (x86)\Windows Live\Shared;C:\Program Files (x86)\ATI Technologies\ATI.ACE\Core-Static;
C:\Program Files\WIDCOMM\Bluetooth Software\;C:\Program Files\WIDCOMM\Bluetooth Software\syswow64;
C:\Program Files\Broadcom\WHL\;C:\Program Files\Broadcom\WHL\syswow64;C:\Program Files\Broadcom\WHL\SysWow64\;
C:\Program Files\Broadcom\WHL\SysWow64\syswow64;C:\Program Files\SASHome\Secure;C:\Program Files\SASHome\x86\Secure;
c:\jdk1.7.0_05\bin;C:\Program Files (x86)\QuickTime\QTSystem\;c:\Python27\;
C:\Program Files (x86)\Dell Printers\OpenManage\OMPMv2.0\tools;
C:\Program Files (x86)\Dell Printers\OpenManage\OMPMv2.0\client;C:\Program Files (x86)\\PostgreSQL\8.4\bin;
C:\Program Files\Java\jre7\bin;C:\HashiCorp\Vagrant\bin


(myvenv) C:\xxd\learn\djangogirls>python manage.py startapp blog

(myvenv) C:\xxd\learn\djangogirls>dir
 Volume in drive C has no label.
 Volume Serial Number is B0B2-5AD6

 Directory of C:\xxd\learn\djangogirls

11/11/2015  10:06 AM    <DIR>          .
11/11/2015  10:06 AM    <DIR>          ..
11/11/2015  10:06 AM    <DIR>          blog
11/11/2015  09:19 AM            36,864 db.sqlite3
11/11/2015  09:08 AM               249 manage.py
11/11/2015  09:19 AM    <DIR>          mysite
11/11/2015  08:45 AM    <DIR>          myvenv
11/11/2015  10:05 AM             2,915 notes.txt

add blog in the mysite/settings.py INSTALLED_APPS section
define Post class in blog/models.py

(myvenv) C:\xxd\learn\djangogirls>python manage.py makemigrations blog
Migrations for 'blog':
  0001_initial.py:
    - Create model Post

(myvenv) C:\xxd\learn\djangogirls>python manage.py migrate blog
Operations to perform:
  Apply all migrations: blog
Running migrations:
  Rendering model states... DONE
  Applying blog.0001_initial... OK
  
register Post in blog/admin.py

(myvenv) C:\xxd\learn\djangogirls>python manage.py createsuperuser
Username (leave blank to use 'xxdxxd'):xxdxxd
Email address: xiaxdus@gmail.com
Password:xxdyhq
Password (again):xxdyhq
Superuser created successfully.

C:\xxd\learn\djangogirls>git init
Initialized empty Git repository in C:/xxd/learn/djangogirls/.git/

C:\xxd\learn\djangogirls>git config --global user.name "xxdxxd"

C:\xxd\learn\djangogirls>git config --global user.email xiaxdus@gmail.com
C:\xxd\learn\djangogirls>git status
On branch master

Initial commit

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        .gitignore
        blog/
        manage.py
        mysite/
        notes.txt

nothing added to commit but untracked files present (use "git add" to track)
C:\xxd\learn\djangogirls>git add -A .
C:\xxd\learn\djangogirls>git commit -m "My Django app, first commit"
create a new repository in github called my-first-blog
https://github.com/xxdxxd/my-first-blog.git
C:\xxd\learn\djangogirls>git remote add origin https://github.com/xxdxxd/my-firs
t-blog.git

C:\xxd\learn\djangogirls>git push -u origin master
Now code is uploaded to github, next we will pull it down to pythonanywhere to deploy it.

start a bash console in pythonanywhere
15:37 ~ $ pwd
/home/davexia
15:37 ~ $ git clone https://github.com/xxdxxd/my-first-blog.git
Cloning into 'my-first-blog'...
remote: Counting objects: 17, done.
remote: Compressing objects: 100% (16/16), done.
remote: Total 17 (delta 0), reused 17 (delta 0), pack-reused 0
Unpacking objects: 100% (17/17), done.
Checking connectivity... done.

15:38 ~ $ tree my-first-blog
my-first-blog
+-- blog
¦   +-- __init__.py
¦   +-- admin.py
¦   +-- migrations
¦   ¦   +-- 0001_initial.py
¦   ¦   +-- __init__.py
¦   +-- models.py
¦   +-- tests.py
¦   +-- views.py
+-- manage.py
+-- mysite
¦   +-- __init__.py
¦   +-- settings.py
¦   +-- urls.py
¦   +-- wsgi.py
+-- notes.txt
3 directories, 13 files
15:38 ~ $ ls
README.txt  my-first-blog
15:39 ~ $ cd my-first-blog/
15:39 ~/my-first-blog (master)$ ls
blog  manage.py  mysite  notes.txt
15:40 ~/my-first-blog (master)$ virtualenv --python=python3.4 myvenv                                                                                
Running virtualenv with interpreter /usr/bin/python3.4
Using base prefix '/usr'
New python executable in myvenv/bin/python3.4
Also creating executable in myvenv/bin/python
Installing setuptools, pip, wheel...done.
15:40 ~/my-first-blog (master)$ source myvenv/bin/activate
(myvenv)15:41 ~/my-first-blog (master)$ pip install django whitenoise
(myvenv)15:45 ~/my-first-blog (master)$ python manage.py collectstatic
Copying '/home/davexia/my-first-blog/myvenv/lib/python3.4/site-packages/django/contrib/admin/static/admin/css/forms.css'
Copying '/home/davexia/my-first-blog/myvenv/lib/python3.4/site-packages/django/contrib/admin/static/admin/css/ie.css'
Copying '/home/davexia/my-first-blog/myvenv/lib/python3.4/site-packages/django/contrib/admin/static/admin/css/rtl.css'
Copying '/home/davexia/my-first-blog/myvenv/lib/python3.4/site-packages/django/contrib/admin/static/admin/css/login.css'
Copying '/home/davexia/my-first-blog/myvenv/lib/python3.4/site-packages/django/contrib/admin/static/admin/css/widgets.css'
Copying '/home/davexia/my-first-blog/myvenv/lib/python3.4/site-packages/django/contrib/admin/static/admin/css/changelists.css'
Copying '/home/davexia/my-first-blog/myvenv/lib/python3.4/site-packages/django/contrib/admin/static/admin/css/base.css'
62 static files copied to '/home/davexia/my-first-blog/static'

(myvenv)15:48 ~/my-first-blog (master)$ python manage.py migrate
Operations to perform:
  Synchronize unmigrated apps: staticfiles, messages
  Apply all migrations: auth, admin, blog, sessions, contenttypes
Synchronizing apps without migrations:
  Creating tables...
    Running deferred SQL...
  Installing custom SQL...
Running migrations:
  Rendering model states... DONE
  Applying contenttypes.0001_initial... OK
  Applying auth.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  Applying auth.0005_alter_user_last_login_null... OK
  Applying auth.0006_require_contenttypes_0002... OK
  Applying blog.0001_initial... OK
  Applying sessions.0001_initial... OK

(myvenv)15:49 ~/my-first-blog (master)$ python manage.py createsuperuser
Username (leave blank to use 'davexia'): davexia
Email address: xiaxdus@gmail.com
Password: yhq7236
Password (again): yhq7236
Superuser created successfully.

pythonanywhere logo->web->add a new web app->Manual configuration->python3.4->Virtualenv
/home/davexia/my-first-blog/myvenv
In code section on the same web page: click to edit the wsgi file,then save the file
in Web tab, click reload, open url http://davexia.pythonanywhere.com/ in the web browser, it is now alive!

change mysite/urls.py to include blog.urls: url(r'',include('blog.urls')),
create blog/urls.py to add urlpatterns: url(r'^$',views.post_list,name='post_list'),
edit blog/views.py to add:
def post_list(request):
   return render(request,'blog/post_list.html',{})
C:\xxd\learn\djangogirls\blog>mkdir templates

C:\xxd\learn\djangogirls\blog>cd templates

C:\xxd\learn\djangogirls\blog\templates>mkdir blog
create post_list.html
C:\xxd\learn\djangogirls>git status
C:\xxd\learn\djangogirls>git add -A .
C:\xxd\learn\djangogirls>git status
C:\xxd\learn\djangogirls>git commit -m "changed the html for the site"
C:\xxd\learn\djangogirls>git push

in pythonanywhere, we need to pull the latest changes from github:
use bash console,
(myvenv)15:50 ~/my-first-blog (master)$ git pull
(myvenv)16:19 ~/my-first-blog (master)$ python manage.py collectstatic

C:\xxd\learn\djangogirls>myvenv\scripts\activate
(myvenv) C:\xxd\learn\djangogirls>python manage.py shell
>>> from blog.models import Post
>>> Post.objects.all()
[]
>>> from django.contrib.auth.models import User
>>> User.objects.all()
[<User: xxdxxd>]
>>> me=User.objects.get(username='xxdxxd')
>>> Post.objects.create(author=me,title='Sample title',text='Test')
<Post: Sample title>
>>> Post.objects.create(author=me,title='Sample title2',text='Test2')
<Post: Sample title2>
>>> Post.objects.create(author=me,title='Sample title3',text='Test3')
<Post: Sample title3>
>>> Post.objects.filter(author=me)
[<Post: Sample title>, <Post: Sample title2>, <Post: Sample title3>]
>>> Post.objects.filter(title__contains='title2')
[<Post: Sample title2>]
>>> post=Post.objects.get(title='Sample title')
>>> post.publish()
>>> from django.utils import timezone
>>> Post.objects.filter(published_date__lte=timezone.now())
[<Post: Sample title>]
>>> Post.objects.order_by('created_date')
[<Post: Sample title>, <Post: Sample title2>, <Post: Sample title3>]
>>> Post.objects.order_by('-created_date')
[<Post: Sample title3>, <Post: Sample title2>, <Post: Sample title>]
>>> Post.objects.filter(published_date__lte=timezone.now()).order_by('published_
date')
[<Post: Sample title>]
